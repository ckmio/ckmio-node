{"version":3,"sources":["../src/amlene-client.exp.js"],"names":["services","auth","chat","topic","ref","actions","add","send_chat_message","notify","subscribe","unsubscribe","client_ref","replace","c","r","Math","random","v","toString","find","what","value","where","i","len","length","findAndFireRegisteredCallback","type","clt_ref","payload","client","requestIndex","requests","console","log","cb","callback","splice","subscription","subscriptions","amleneResponseHandler","r_auth","authenticated","handlers","r_subscribe","ack","srv_ref","notification","subcription","handler","r_transaction","r_ref","r_market","request","message","JSON","stringify","AmleneClient","host","port","user","password","planKey","planSecret","connection","connecting","delay","receiveAndDecodeMessage","bind","onConnection","remainding","remaindingLength","entity","connected","push","formatAndSendMessage","action","throttle","to","content","from","name","description","updateMessage","fileName","fileType","fileSize","binaryContent","doUploadFile","Request","fileUpload","plan_key","plan_secret","stream","when","doSubscribe","data","conditions","remove","reference","milliseconds","eventname","$this","e","setTimeout","init","login","self","undefined","debug","$waitThenInitEnd","waitThenInit","$waitThenInitError","connectiong","on","connect","str","parse","verb","packetLength","dataPacket","arr","Uint8Array","write","buffer","totalMessageLength","byteLength","accumulatedLen","missingData","slice","byteOffset","slicedMessage","concat","__handleResponse","nextMessageLength","readUInt32BE"],"mappings":"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","file":"amlene-client.exp.js","sourcesContent":["import { Socket } from 'net';\nimport { Buffer } from 'buffer';\nimport {FileUploadRequest, FileSlot} from './file-upload';\n\n\nexport var services = {\n    auth : \"10:\",\n    chat : \"22:\",\n    topic : \"21:\",\n    ref: \"27:\"\n};\n\nexport var actions = {\n    add : \"add\",\n    send_chat_message: \"send-chat-message\",\n    notify :\"notify\",\n\tsubscribe : \"subscribe\",\n\tunsubscribe : \"unsubscribe\"\n}\n\n\nfunction client_ref(){\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n        return v.toString(16);\n  });\n}\n\n\nfunction find(what, value, where){\n   for(var i=0, len = where.length; i<len; i++){\n       if(where[i][what] == value)\n           return i;\n   }\n   return -1;\n}\n\nfunction findAndFireRegisteredCallback(type, clt_ref, payload, client){\n\tvar requestIndex = find('clt_ref', clt_ref ,client.requests);\n    console.log(requestIndex);\n\tif(requestIndex != -1){\n\t\tlet cb = client.requests[requestIndex].callback;\n\t\tcb(type, clt_ref, payload, client);\n\t\tclient.requests.splice(requestIndex, 1); \n\t\treturn true;\n\t}\n\tvar subscription= client.subscriptions[clt_ref];\n\tif(subscription){\n\t\tlet cb = subscription.callback;\n\t\tcb(type, clt_ref, payload, client);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\nfunction amleneResponseHandler(type, clt_ref, payload, client){\n\tif(findAndFireRegisteredCallback(type, clt_ref, payload, client)){\n\t\treturn;\n\t}\n\telse{\n  \t\tswitch(type){\n      \tcase services.r_auth : \n         client.authenticated = true;\n         if(client.handlers['onAuthenticated']){\n             client.handlers[authenticated](payload);\n         }\n         break;\n\n      \tcase services.r_subscribe: \n         var subscription = client.subscriptions[payload.clt_ref];\n         if(subscription != null){\n             subscription.ack = 1;\n             subscription.srv_ref = payload.srv_ref;\n         }\n         break;\n\n      case services.notification : \n        var subscription = find('srv_ref', payload.srv_ref, client.subscriptions);\n        if (subscription != null)\n           subcription.handler(payload, client);\n        break;\n\n      case services.r_transaction :\n      case services.r_ref: \n      case services.r_market:\n         let request = client.requests[payload.clt_ref];\n         if(request != null && request.handler != null)\n             request.handler(payload);\n         else\n             console.log(payload);\n         break;\n      \n      case services.message:\n        let handler = client.handlers['onMessage'];\n        if(handler){\n             handler(payload);\n         }\n        break;\n\n      default: \n        console.log(\"Unknown Message\"); \n        console.log(\"type = \"+ type);\n        console.log(\"payload = \"+ JSON.stringify(payload));\n   \n  }\n  }      \n}\n\nexport default class AmleneClient {\n    constructor(host, port, user, password, planKey, planSecret) {\n        this.host = host;\n        this.port = port;\n        this.user = user; \n        this.password = password;\n        this.connection = new Socket();\n        this.connecting = false;\n        this.subscriptions = [];\n        this.planKey = planKey;\n        this.planSecret = planSecret;\n        this.delay = 500;\n        this.requests=[];\n        this.handlers = {\n            'data': this.receiveAndDecodeMessage.bind(this),\n            'connect': this.onConnection(),\n        };\n        this.remainding = null;\n        this.remaindingLength = 0;\n    }\n\n    sendEntity(entity, cb) {\n    \tif (this.connected) {\n    \t\tvar ref = client_ref();\n    \t\tif(cb){\n            \tthis.requests.push({clt_ref: ref, callback : cb});\n            }\n            this.formatAndSendMessage(this.connection, services.ref, {clt_ref: ref, action: actions.add, payload : entity});\n        }\n        else{\n        \tconsole.log('You are not connected yet!');\n        }      \n    }\n\n    /* start chat handlers */\n    subscribeToChat(){\n      var ref = client_ref();\n      this.throttle(()=> this.formatAndSendMessage(this.connection, services.chat, {clt_ref: ref, action: actions.subscribe, payload : {}}));\n    }\n\n    sendChatMessage(to, content){\n      var ref = client_ref();\n      this.throttle(()=> \n        this.formatAndSendMessage(this.connection, \n            services.chat, \n            {clt_ref: ref, action: actions.send_chat_message, payload : {from : this.user, to : to, content : content }})\n        );\n    }\n    /* end chat handlers */\n\n    /* topic handlers */\n    createTopic(name){\n      var ref = client_ref();\n      this.throttle(()=> this.formatAndSendMessage(this.connection, \n            services.topic, \n            {clt_ref: ref, action: actions.add, payload : {name : name, description : \"Just for us!\"}})\n        );\n    }\n\n    subscribeToTopic(name, callback){\n        var ref = client_ref();\n        this.throttle(()=> this.formatAndSendMessage(this.connection, services.topic, {clt_ref: ref, action: actions.subscribe, payload : {name : name}}));\n    }\n\n    sendTopicUpdate(name, updateMessage){\n        var ref = client_ref();\n        this.throttle(()=> this.formatAndSendMessage(this.connection, \n              services.topic, \n              {clt_ref: ref, action: actions.notify, payload : {name : name, content : updateMessage}})\n          );\n    }\n    /* end handler */\n\n    /* file upload handler */\n\n    uploadfile(fileName, fileType, fileSize, binaryContent, callback){\n      var ref = client_ref();\n      this.subscriptions[ref] = {request : new FileUploadRequest(fileName, fileType, fileSize), clt_ref: ref, ack:0, callback : callback};\n      this.throttle(()=>this.doUploadFile(fileName, fileType, fileSize, binaryContent, callback));\n    }\n\n    /* end file upload handler */\n    doUploadFile(Request, binaryContent, callback){\n      this.formatAndSendMessage(this.connection, services.fileUpload, { action : \"init-session\" , clt_ref: ref,  payload : Request });\n      return ref;\n    }\n\n    login(user, password, planKey, planSecret){\n    \tconsole.log(`I am logging in ${user} - ${password} `)\n        this.formatAndSendMessage(this.connection, services.auth, {action : \"authenticate\", clt_ref: client_ref(), payload: { user: user,  password:password, plan_key : planKey, plan_secret :planSecret} });\n    }\n\n    /* funnels */\n\n    createStream(name){\n        var ref = client_ref();\n        this.throttle(()=> this.formatAndSendMessage(this.connection, \n            services.ref, \n            {clt_ref: ref, action: actions.subscribe, payload : {stream : name, description : \"Just for us!\"}})\n        );\n    }\n\n    funnel(name, when, callback){\n        this.throttle(()=>this.doSubscribe({stream:name, when: when}, callback));\n    }\n\n    sendToStream(name, data){\n        var ref = client_ref();\n        this.throttle(()=> this.formatAndSendMessage(this.connection, services.ref, {clt_ref: ref, action: actions.add, payload : { stream : name, content: data}}));\n    }\n\n    doSubscribe(conditions, callback){\n        let ref = client_ref();\n        this.subscriptions[ref] = {conditions : conditions, clt_ref: ref, ack:0, callback : callback};\n        this.formatAndSendMessage(this.connection, services.ref, { action : actions.subscribe, payload : conditions, clt_ref: ref });\n        return ref;\n    }\n    unsubscribe(ref){\n        var subscription = this.subscriptions[ref];\n        if(subscription!=null)\n            this.subscriptions.remove(subscription);\n        this.formatAndSendMessage(this.connection, services.unsubscribe, {reference : ref}); \n    }\n\n    on(subscription, callback){\n        this.throttle(()=>this.subscribe(subscription.conditions, callback));\n    }\n\n\n    waitThenInit(milliseconds, eventname, $this) {\n        return ((e) => {\n            console.log(e); console.log(eventname); $this.connected = false; $this.connecting = true;\n            setTimeout(() => $this.init($this), milliseconds);\n        });\n    }\n\n    onConnection() {\n        var $this = this;\n        return () => { console.log('I am connected \\n'); $this.connected = true; $this.connecting = false; $this.login($this.user, $this.password, $this.planKey, $this.planSecret); }\n    }\n\n    init(self) {\n        var $this = (self == undefined) ? this : self;\n\n        if ($this.connected)\n            return;\n\n\n        if ($this.connecting != true && $this.connection.connecting != true) {\n            if($this.debug){\n            console.log('this.connecting ' + $this.connecting);\n            console.log('this.connection.connecting ' + $this.connection.connecting);\n            }\n\n            var $waitThenInitEnd = $this.waitThenInit(5000, \"end\", $this);\n            var $waitThenInitError = $this.waitThenInit(5000, \"error\", $this);\n            $this.connectiong = true;\n            $this.connection.on('data', $this.handlers['data']);\n            $this.connection.on('end', $waitThenInitEnd);\n            $this.connection.on('error', $waitThenInitError);\n            $this.connection.on('connect', $this.handlers['connect']);\n        }\n\n        if (!$this.connection.connecting) {\n            $this.connection.connect($this.port, $this.host);\n            $this.connecting = true;\n        }\n    }\n\n    __handleResponse(str){\n        if(debug) console.log(\"_handleresponse \\n\"+ str);\n        var r = JSON.parse(str); \n        amleneResponseHandler(r.type, r.clt_ref, r.payload, this);\n    }\n\n    throttle(action){\n      setTimeout(action, this.delay);\n    }\n\n    formatAndSendMessage(connection, verb, payload) {\n        var message = verb + JSON.stringify(payload);\n        var packetLength = dataPacket.length;\n        var arr = new Uint8Array([\n            (packetLength & 0xff000000) >> 24,\n            (packetLength & 0x00ff0000) >> 16,\n            (packetLength & 0x0000ff00) >> 8,\n            (packetLength & 0x000000ff)\n        ]);\n        connection.write(Buffer.from(arr.buffer)); // writing the size of the packet\n        connection.write(dataPacket);              // writing the actual packet \n    }\n\n    receiveAndDecodeMessage(data){\n        var totalMessageLength = Buffer.byteLength(data);\n        console.log(\"Total Message Length \" + totalMessageLength);\n        var accumulatedLen = 0;\n        if(this.remainding!=null)\n        {\n            //var missingData = Buffer.from(data.buffer, 0, this.remaindingLength);\n            var missingData = new Buffer(data.buffer.slice(data.byteOffset, data.byteOffset + this.remaindingLength));\n            var slicedMessage = Buffer.concat([this.remainding, missingData]);\n            this.__handleResponse(slicedMessage.toString(\"utf8\"));\n            accumulatedLen = this.remaindingLength;\n        }\n        while(totalMessageLength - accumulatedLen > 0){\n            var nextMessageLength = Buffer.from(data.buffer, accumulatedLen, 4).readUInt32BE();\n            if(totalMessageLength - accumulatedLen -nextMessageLength -4 < 0)\n            {\n                this.remainding = new Buffer(data.buffer.slice(data.byteOffset + 4 + accumulatedLen, data.byteOffset + totalMessageLength));\n                this.remaindingLength = -(totalMessageLength - accumulatedLen -nextMessageLength -4);\n                return;\n            }      \n            console.log(\"Next Message Length \" + nextMessageLength);\n            var slicedMessage = new Buffer(data.buffer.slice(data.byteOffset + 4 + accumulatedLen, data.byteOffset + 4 + accumulatedLen + nextMessageLength));\n            this.__handleResponse(slicedMessage.toString(\"utf8\"));\n            accumulatedLen += nextMessageLength + 4;\n        }\n        this.remainding = null;     \n    }\n\n}\n\n"]}